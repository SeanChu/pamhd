# http://dx.doi.org/10.1029/1999JA900449
# Use RCB instead of RANDOM for (much) shorter time to solution

output-directory = results/magnetohydrodynamic/reconnection/2d/y1/hll_athena/
time-start = 0
time-length = 5
load-balancer = RANDOM
solver-mhd = hll_athena
save-mhd-n = 1
vacuum-permeability = 1
proton-mass = 1
remove-div-B-n = 0.2

[grid]
#
#       --|---|---|---|---|--
#         |   |   |   |   |    ----|
#  ---  --|---|---|---|---|--      |
#   A     |   |   |   |   |        |
#   |   --|---|---|---|---|--      |   1 layer of copy
# N normal cells   ...             |-- boundary cells
#   |   --|---|---|---|---|--      |   at top (+z) and
#   V     |   |   |   |   |        |   bottom (-z)
#  ---  --|---|---|---|---|--      |
#     ->  |   |   |   |   |  <-  --|    z
#     | --|---|---|---|---|-- |
#     |                       |         A
#     ----  periodic grid  ----         |
#                                       |
#         |<- 2*N cells ->|             ---> x
#
periodic = {true, false, false}
# same behavior with up to 71 cells
nr-cells = {2*15, 1, 1*15 + 2}
#
# simulation box height == 12.8 + height of 2 cells
# i.e. 12.8 + 2 * 12.8 / N
#
volume = {25.6, 12.8, 12.8 * (1 + 2/15)}
#
# grid is centered at origin
#
start = {-12.8, -6.4, -6.4 * (1 + 2/15)}

[initial]
default.number-density = 1/cosh(r[2] / 0.5)^2 + 0.2
default.velocity = {0, 0, 0}
default.pressure = 1
default.magnetic-field = {tanh(r[2] / 0.5) - 0.1 * pi/12.8 * cos(2*pi*r[0]/25.6) * sin(pi*r[2]/12.8), 0, 0.1 * 2*pi/25.6 * sin(2*pi*r[0]/25.6) * cos(pi*r[2]/12.8)}

[copy-boundaries]
nr-boxes = 2
# +z
box1.start = {-999, -999, 6.4}
box1.end = {999, 999, 999}
# -z
box2.start = {-999, -999, -999}
box2.end = {999, 999, -6.4}
